openapi: 3.1.0
info:
  title: Selector
  version: '1.0'
  summary: Selector Backend
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:8080'
    description: Localhost
paths:
  /auth:
    parameters: []
    get:
      summary: Auth
      tags: []
      responses:
        '308':
          description: Permanent Redirect (experiemental)
      operationId: get-auth
      description: Redirect to the Google oauth2 consent page
      security: []
  /auth/callback:
    get:
      summary: Auth Callback
      tags: []
      responses: {}
      operationId: get-auth-callback
      description: Only used by the google API and should not be used
      security: []
  /api/lists:
    get:
      summary: Get all the lists
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                x-examples:
                  example-1:
                    - id: A fantastic ID
                      name: My List
                      elements: null
                    - id: A fantastic ID
                      name: Rock Paper Scissors
                      elements: null
                items:
                  $ref: '#/components/schemas/PartialList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      operationId: get-api-lists
      description: |-
        Returns you an array of your lists

        /!\ the lists are only partially fetched, they do not include the list elements which will contain a "null" value instead
      parameters: []
    parameters: []
    post:
      summary: ''
      operationId: post-api-lists
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      description: Create a new list From a model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
        description: 'If an "id" field is provided, it will be overriden.'
  '/api/list/{id}':
    get:
      summary: List related
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
                x-examples:
                  example-1:
                    id: ''
                    name: Rock Paper Scissors
                    elements:
                      - name: Paper
                        probability: 100
                        properties: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      operationId: get-api-list
      description: Return a list with the associated ID
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The targeted list ID
    patch:
      summary: ''
      operationId: patch-api-list-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
                x-examples:
                  example-1:
                    id: A fantastic ID
                    name: My List
                    elements:
                      - name: Paper
                        probability: 100
                        properties: {}
                      - name: Rock
                        probability: 50
                        properties: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      description: Updates an existing list with the provided body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
              x-examples:
                example-1:
                  id: ''
                  name: My List
                  elements:
                    - name: Paper
                      probability: 100
                      properties: {}
                    - name: Rock
                      probability: 50
    delete:
      summary: ''
      operationId: delete-api-list-id
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      description: Permanently delete a list with the corresponding ID
components:
  schemas:
    List:
      type: object
      x-examples:
        example-1:
          id: A fantastic ID
          name: My List
          elements:
            - name: Paper
              probability: 100
              properties: {}
            - name: Rock
              probability: 50
              properties: {}
      properties:
        id:
          type: string
        name:
          type: string
        elements:
          type: array
          items:
            $ref: '#/components/schemas/RandomElement'
    RandomElement:
      type: object
      x-examples:
        example-1:
          name: Paper
          probability: 100
          properties: {}
      properties:
        name:
          type: string
        probability:
          type: integer
        properties:
          type: object
    PartialList:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        elements:
          type: 'null'
      x-examples:
        example-1:
          id: A fantastic ID
          name: My List
          elements: null
  securitySchemes:
    API Key:
      type: apiKey
      in: cookie
      description: Automatically created after successfuly connecting using /auth
      name: token
security:
  - token: []
